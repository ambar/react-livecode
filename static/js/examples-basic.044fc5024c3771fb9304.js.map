{"version":3,"sources":["webpack:///./examples/Basic.mdx","webpack:///./src/transformCode.js","webpack:///./src/runCode.js","webpack:///./src/useLiveCode.js","webpack:///./src/LiveCodeEditor.js","webpack:///./src/LiveCode.js"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","_src_LiveCode__WEBPACK_IMPORTED_MODULE_3__","autoFocus","scope","chunk","code","split","transform","ast","b","recast","types","builders","expressionStatements","newAst","_objectSpread","body","map","node","type","expressionStatement","callExpression","identifier","expression","transformCode","_transform2","_slicedToArray","parse","program","print","runInNewContext","ctx","fn","values","arguments","length","undefined","_ref$modules","modules","dispose","run","callback","iframe","_transformCode2","runCode_slicedToArray","newCode","document","hidden","onload","contentWindow","appendChild","remove","global","expCount","Object","assign","__onexpression__","r","push","addEventListener","e","preventDefault","error","Error","message","script","textContent","Promise","resolve","reject","err","data","useLiveCode","options","_useState2","useLiveCode_slicedToArray","useState","asyncValues","setValues","_useMemo","useMemo","concat","_toConsumableArray","useEffect","isAsyncValues","isPromise","then","LiveCodeEditor","react_default","lib_default","highlight","languages","js","inspectPromise","test","serialize","array","config","indentation","depth","refs","printer","prettyPrint","obj","prettyFormat","min","printFunctionName","plugins","LiveCode","_ref","_ref$code","initialCode","_ref$scope","_ref$split","_ref$autoFocus","nativeProps","LiveCode_slicedToArray","dedent","setCode","isVertical","ret","Array","isArray","line","i","core_browser_esm","key","css","display","justifyContent","margin","maxWidth","maxHeight","fontSize","lineHeight","borderRadius","boxShadow","fontFamily","flexDirection","src_LiveCodeEditor","value","onValueChange","padding","width","minHeight","color","backgroundColor","outline","overflow","textarea",".token","fontWeight","WebkitOverflowScrolling","boxSizing","fallback","safeCall"],"mappings":"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","file":"static/js/examples-basic.4f8da854.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import chunk from 'lodash/chunk'\nimport LiveCode from '../src/LiveCode'\nimport 'prismjs/themes/prism.css'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"horizontal\"}}>{`Horizontal`}</MDXTag>\n<LiveCode\n  autoFocus\n  scope={{chunk}}\n  code={`\n    2 ** 3\n    chunk(['a', 'b', 'c', 'd'], 2)\n    new Map([['key1', 'value1'], ['key2', 'value2']])\n    const never = new Promise(_ => {})\n    never\n  `}\n/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"vertical\"}}>{`Vertical`}</MDXTag>\n<LiveCode\n  split=\"vertical\"\n  scope={{chunk}}\n  code={`\n    2 ** 3\n    chunk(['a', 'b', 'c', 'd'], 2)\n    new Map([['key1', 'value1'], ['key2', 'value2']])\n    const never = new Promise(_ => {})\n    never\n  `}\n/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"module-script\"}}>{`Module Script`}</MDXTag>\n<LiveCode\n  scope={{chunk}}\n  code={`\n    import olt from 'https://unpkg.com/olt'\n    typeof olt\n  `}\n/>\n           </MDXTag>\n  }\n}\n  ","import recast from 'recast'\n\nconst transform = ast => {\n  const b = recast.types.builders\n  let expressionStatements = 0\n  const newAst = {\n    ...ast,\n    body: ast.body.map(node => {\n      if (node.type === 'ExpressionStatement') {\n        expressionStatements += 1\n        return b.expressionStatement(\n          b.callExpression(b.identifier('__onexpression__'), [node.expression])\n        )\n      }\n      return node\n    }),\n  }\n  return [expressionStatements, newAst]\n}\n\nconst transformCode = code => {\n  const [expressionStatements, newAst] = transform(recast.parse(code).program)\n  return [expressionStatements, recast.print(newAst).code]\n}\n\nexport default transformCode\n","import transformCode from './transformCode'\n\nconst createContext = () => {\n  const iframe = document.createElement('iframe')\n  iframe.hidden = true\n  return {\n    run(fn) {\n      iframe.onload = () => {\n        fn(iframe.contentWindow)\n      }\n      document.body.appendChild(iframe)\n    },\n    dispose() {\n      iframe.remove()\n    },\n  }\n}\n\n/**\n * Create an `iframe` to compile and run code\n */\nexport const runInNewContext = (code, scope = {}, {modules = true} = {}) => {\n  let ctx\n  let dispose = () => {\n    if (ctx) {\n      ctx.dispose()\n    }\n  }\n\n  const run = callback => {\n    const [expressionStatements, newCode] = transformCode(code)\n    ctx = createContext()\n    ctx.run(global => {\n      const values = []\n      let expCount = 0\n      Object.assign(global, scope, {\n        __onexpression__: r => {\n          values.push(r)\n          expCount += 1\n          if (expCount === expressionStatements) {\n            callback(null, values)\n          }\n        },\n      })\n\n      // https://mdn.io/ErrorEvent\n      // https://mdn.io/GlobalEventHandlers/onerror#Notes\n      global.addEventListener('error', e => {\n        e.preventDefault()\n        callback(e.error || new Error(e.message)) // Safari returns null\n      })\n\n      const {document} = global\n      const script = document.createElement('script')\n      if (modules) {\n        script.type = 'module'\n      }\n      script.textContent = newCode\n      document.body.appendChild(script)\n      script.remove()\n    })\n  }\n\n  // async\n  if (modules) {\n    const promisify = fn =>\n      new Promise((resolve, reject) =>\n        fn((err, data) => (err ? reject(err) : resolve(data)))\n      )\n    return {values: promisify(run), dispose}\n  }\n\n  // sync\n  let values\n  try {\n    run((err, data) => (values = err || data))\n  } catch (err) {\n    values = err\n  }\n  return {values, dispose}\n}\n","import {useState, useMemo, useEffect} from 'react'\nimport isPromise from 'is-promise'\nimport {runInNewContext} from './runCode'\n\nconst useLiveCode = (code, scope = {}, options = {}) => {\n  const [asyncValues, setValues] = useState(null)\n\n  const {values, dispose} = useMemo(\n    () => runInNewContext(code, scope, options),\n    [code, ...Object.values(scope), ...Object.values(options)]\n  )\n\n  useEffect(() => dispose, [dispose])\n\n  const isAsyncValues = isPromise(values)\n  if (isAsyncValues) {\n    values.then(setValues, setValues)\n  }\n\n  return isAsyncValues ? asyncValues : values\n}\n\nexport default useLiveCode\n","import React from 'react'\nimport Editor from 'react-simple-code-editor'\nimport {highlight, languages} from 'prismjs/components/prism-core'\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-javascript'\n\nconst LiveCodeEditor = props => {\n  return <Editor highlight={code => highlight(code, languages.js)} {...props} />\n}\n\nexport default LiveCodeEditor\n","/** @jsx jsx */\nimport {jsx} from '@emotion/core'\nimport {useState} from 'react'\nimport prettyFormat from 'pretty-format'\nimport dedent from 'dedent'\nimport isPromise from 'is-promise'\nimport useLiveCode from './useLiveCode'\nimport LiveCodeEditor from './LiveCodeEditor'\n\nconst inspectPromise = {\n  test: isPromise,\n  serialize(array, config, indentation, depth, refs, printer) {\n    // TODO: inspect async value\n    return 'Promise'\n  },\n}\n\nconst safeCall = (fn, fallback) => {\n  try {\n    return fn()\n  } catch (e) {\n    return fallback(e)\n  }\n}\n\nconst prettyPrint = obj =>\n  prettyFormat(obj, {\n    min: true,\n    printFunctionName: true,\n    plugins: [inspectPromise],\n  })\n\nconst LiveCode = ({\n  code: initialCode = '',\n  scope = {},\n  split = 'horizontal',\n  autoFocus = false,\n  modules = true,\n  ...nativeProps\n}) => {\n  const [code, setCode] = useState(() => dedent(initialCode))\n  const isVertical = split === 'vertical'\n\n  const serialize = ret => {\n    // module script loading\n    if (ret == null) {\n      return ' '\n    }\n\n    // evaluation ok\n    if (Array.isArray(ret)) {\n      return ret.length\n        ? ret.map((line, i) => <div key={i}>&rsaquo; {prettyPrint(line)}</div>)\n        : ' '\n    }\n\n    // evaluation error\n    return <div>&rsaquo; {prettyPrint(ret)}</div>\n  }\n\n  const values = useLiveCode(code, scope, {modules})\n\n  return (\n    <div\n      css={{\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '1em auto',\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n        fontSize: '0.85em',\n        lineHeight: '1.45',\n        borderRadius: '3px',\n        boxShadow: '0 1px 5px rgba(0,0,0,.1)',\n        fontFamily: '\"Fira code\", \"Fira Mono\", Menlo, Consolas, monospace',\n        flexDirection: isVertical ? 'column' : 'row',\n      }}\n      {...nativeProps}\n    >\n      <LiveCodeEditor\n        autoFocus={autoFocus}\n        value={code || ' '}\n        onValueChange={code => setCode(code)}\n        padding={10}\n        css={{\n          width: isVertical ? '100%' : '50%',\n          minHeight: '5em',\n          color: '#222',\n          backgroundColor: '#fafafa',\n          outline: 'none',\n          fontSize: 'inherit !important',\n          overflow: 'auto',\n          borderRadius: isVertical ? '0 3px 3px 0' : '3px 0 0 3px',\n          textarea: {\n            outline: 'none',\n          },\n          '.token': {\n            backgroundColor: 'inherit!important',\n          },\n        }}\n      />\n      <pre\n        css={{\n          width: isVertical ? '100%' : '50%',\n          margin: '0',\n          padding: '10px',\n          fontFamily: 'inherit',\n          fontWeight: 300,\n          color: '#eee',\n          backgroundColor: '#282c34',\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'auto',\n          borderRadius: isVertical ? '0 0 3px 3px' : '0 3px 3px 0',\n          boxSizing: 'border-box',\n        }}\n      >\n        {safeCall(() => serialize(values), serialize)}\n      </pre>\n    </div>\n  )\n}\n\nexport default LiveCode\n"],"sourceRoot":""}